{
  "hash": "3adac2621f8311f73bdf687ddb824fd7",
  "result": {
    "markdown": "---\ntitle: Parameterized RMarkdown is Amazing\ndate: '2023-02-25'\ntags:\n  - R Markdown\nbibliography: \"bibliography.bib\"\nnocite: |\n     @*\nauthor: \"Robert W. Walker\"\nformat: \n   html:\n     self-contained-math: true\n     code-fold: true\n     code-copy: hover\n     code-block-border-left: true\n     df-print: paged\n     fig-format: retina\n     footnotes-hover: true\n     html-math-method: katex\n     mainfont: Playfair Display\n     toc: true\n     toc-title: Navigation\n     theme: simplex\n---\n\n\n\n\n# Parameterized R Markdown\n\nA while back, I learned that you can parameterize markdown.  You can send it something to process as argument.  This is amazing.  Let me show an example.\n\nFirst, I want to build a quarto markdown file.  In *RStudio*, that is `File > New file > Quarto document`.  The following is what it looks like to do this with an .RMarkdown document.\n\n## RMarkdown\n\nWe will need to add a bit of metadata to the top.  The key component is the `params:` argument.  I want to pass a `ticker` with a default option.\n\n![](pic/yaml.png)\n\nNow, let's build up an example.\n\n## The Quarto Markdown\n\n![YAML](pic/Screenshot 2023-02-25 at 9.35.39 PM.png)\n\n\nI want to load a few libraries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyquant)\nlibrary(ggplot2)\nlibrary(fpp3)\n```\n:::\n\n\nWithout loading anything else, this markdown is aware of what I passed it in `params$ticker`.  But `tidyquant` can make use of tickers and retrieve market OHLC data.  So let me proxy that behavior with Goldman Sachs as the example.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparams <- NULL\nparams$ticker <- \"GS\"\n```\n:::\n\n\nNow my environment looks the same.  Let me use `tq_get` to get the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- tq_get(params$ticker)\n```\n:::\n\n\nNow I want to use a special *geometry* for OHLC data.  I will also give it a title that deploys the ticker and use the special theme.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% ggplot(aes(x = date, y = close)) +\n    geom_barchart(aes(open = open, high = high, low = low, close = close)) +\n    labs(title = paste(params$ticker,\"Bar Chart\"), y = \"Closing Price\", x = \"\") + \n    theme_tq()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nLet's look at a smooth with a simple 50 day moving average.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>%\n    ggplot(aes(x = date, y = close)) +\n    geom_line() +           # Plot stock price\n    geom_bbands(aes(high = high, low = low, close = close), ma_fun = SMA, n = 50)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nWe can also invoke `tidyquant` functions of the data, like returns or more complicated financial quantities.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% tq_transmute(select= adjusted, \n                 mutate_fun = periodReturn, \n                 period     = \"daily\", \n                 col_rename = \"Ra\") %>% \n  as_tsibble(index=date) %>% \n  autoplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/PlotRet-1.png){width=672}\n:::\n:::\n\n\n## Adding Some Interactives\n\nThe following are a few quick interactive plots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyquant)\nlibrary(tidyverse)\nlibrary(magrittr)\n# Use tidyquant to get the data\n# Slice off the most recent 120 days\ndat.tail <- tail(dat, 120)\ndat.tail %<>% mutate(\n    open = round(open, digits=2),\n    close = round(close, digits=2),\n    high = round(high, digits=2),\n    low = round(low, digits=2),\n    adjusted = round(adjusted, digits=2)\n    )\nlibrary(DT)\ndatatable(dat.tail)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-fd92bbaa9f0f804bb794\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-fd92bbaa9f0f804bb794\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\"],[\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\",\"GS\"],[\"2022-09-02\",\"2022-09-06\",\"2022-09-07\",\"2022-09-08\",\"2022-09-09\",\"2022-09-12\",\"2022-09-13\",\"2022-09-14\",\"2022-09-15\",\"2022-09-16\",\"2022-09-19\",\"2022-09-20\",\"2022-09-21\",\"2022-09-22\",\"2022-09-23\",\"2022-09-26\",\"2022-09-27\",\"2022-09-28\",\"2022-09-29\",\"2022-09-30\",\"2022-10-03\",\"2022-10-04\",\"2022-10-05\",\"2022-10-06\",\"2022-10-07\",\"2022-10-10\",\"2022-10-11\",\"2022-10-12\",\"2022-10-13\",\"2022-10-14\",\"2022-10-17\",\"2022-10-18\",\"2022-10-19\",\"2022-10-20\",\"2022-10-21\",\"2022-10-24\",\"2022-10-25\",\"2022-10-26\",\"2022-10-27\",\"2022-10-28\",\"2022-10-31\",\"2022-11-01\",\"2022-11-02\",\"2022-11-03\",\"2022-11-04\",\"2022-11-07\",\"2022-11-08\",\"2022-11-09\",\"2022-11-10\",\"2022-11-11\",\"2022-11-14\",\"2022-11-15\",\"2022-11-16\",\"2022-11-17\",\"2022-11-18\",\"2022-11-21\",\"2022-11-22\",\"2022-11-23\",\"2022-11-25\",\"2022-11-28\",\"2022-11-29\",\"2022-11-30\",\"2022-12-01\",\"2022-12-02\",\"2022-12-05\",\"2022-12-06\",\"2022-12-07\",\"2022-12-08\",\"2022-12-09\",\"2022-12-12\",\"2022-12-13\",\"2022-12-14\",\"2022-12-15\",\"2022-12-16\",\"2022-12-19\",\"2022-12-20\",\"2022-12-21\",\"2022-12-22\",\"2022-12-23\",\"2022-12-27\",\"2022-12-28\",\"2022-12-29\",\"2022-12-30\",\"2023-01-03\",\"2023-01-04\",\"2023-01-05\",\"2023-01-06\",\"2023-01-09\",\"2023-01-10\",\"2023-01-11\",\"2023-01-12\",\"2023-01-13\",\"2023-01-17\",\"2023-01-18\",\"2023-01-19\",\"2023-01-20\",\"2023-01-23\",\"2023-01-24\",\"2023-01-25\",\"2023-01-26\",\"2023-01-27\",\"2023-01-30\",\"2023-01-31\",\"2023-02-01\",\"2023-02-02\",\"2023-02-03\",\"2023-02-06\",\"2023-02-07\",\"2023-02-08\",\"2023-02-09\",\"2023-02-10\",\"2023-02-13\",\"2023-02-14\",\"2023-02-15\",\"2023-02-16\",\"2023-02-17\",\"2023-02-21\",\"2023-02-22\",\"2023-02-23\",\"2023-02-24\"],[334.68,332.32,324.25,330.29,337.98,341.66,336.08,328.45,328.73,326.38,320.57,325.7,324.92,322.32,307.55,299,297.5,294,297.07,296,297.17,306.8,306.58,307.39,304,303.63,298.01,293.99,290.42,307.46,304.41,321.67,312.61,312.1,311,328.5,327.86,334.52,339.31,338.52,341.07,345.13,347.62,347.5,354,360.01,362.3,362.95,370,380,384,385.98,383.21,377.15,381.28,378.9,381.4,383.9,385.76,385.43,381.13,382.5,386.5,381.52,378.55,369.48,362.49,362.03,356.71,358.57,374.63,367.01,354.48,345.08,346.27,345.99,348.26,347.16,344.84,346.51,340.5,342.44,341.74,345.5,348.03,344.25,347.3,351.88,352.64,358.87,366.24,363.49,364.8,348.32,346.03,349.87,341.67,340,344.75,351.73,351.95,353.29,359.16,359.1,368,365.62,369,368.17,372.92,377.04,367,369.09,373.94,368.74,370.75,368.05,366.72,361.63,363.2,360.17],[340.32,333.25,332.16,335.81,341.03,344.37,336.52,330.93,335.28,329,329.29,326.8,329.79,323.39,309.79,302.1,299.15,302.41,299.35,301.09,301.23,315.16,310.21,309.08,305.15,304.72,302.52,299.78,308.76,311.62,311.62,324.48,314.79,316.05,325.77,331.24,333.6,338.67,341.93,342.58,346.18,348.69,357.44,350.67,358.38,362.96,367.19,367.15,380.43,387,387.3,389.58,385.4,381.72,382.83,380.77,385.83,388.2,389.44,388.39,384.93,386.15,386.5,382.52,378.87,370.37,365.3,362.59,361.64,364.01,378.56,368.83,356.11,347.78,348.4,347.42,350.88,348.05,347.76,347.75,342.85,344.64,343.69,348.6,350.31,345.14,349,356.5,357.5,365.5,370.1,374.35,366.79,354.79,352.16,352.25,349.56,350.3,349.96,355,355.99,362.33,365.92,368.94,372.89,374.57,371.26,376.31,378.35,379.68,372.23,375.06,377.05,374.37,374.25,371.06,366.72,363,367.88,365.18],[329.97,323.46,323.25,327.36,337.03,340.09,326.83,323.5,327.59,319.79,320.54,320.01,320.63,311.2,297.46,292.31,288.62,292.46,291.55,292.7,291.1,305.88,303.6,303.42,299.15,298.43,293.92,291.71,287.75,299.07,304.14,312,308.06,309,309.49,325.85,325.92,334.14,336.53,336,340.57,343.77,346.74,342.59,351.23,358.52,361.46,360.88,369.74,378.75,380.5,380.65,380.01,375.01,377.39,375.42,381.4,383.41,385.18,380.89,379.26,375.1,380.45,378.4,369.31,360.33,358.15,356.06,356.21,356.34,365.51,359.45,347.94,343.41,342.63,343.49,346.89,339.88,343.11,341.79,339.3,341.24,339.4,342.81,345.08,340.14,340.95,349.5,350.5,356.21,362.57,362.36,344,347.8,345.52,338.21,336.16,340,343.9,349.52,351.83,352.4,356.86,358.76,364.55,365.44,365.78,367.34,371.98,367.8,364.56,368,369.38,368.25,368.8,366.86,360.09,358.04,359.61,359.53],[331.48,326.49,330.56,335.38,340.1,342.58,328.39,327.26,331.62,326.21,328.66,323.26,320.71,312.92,301.97,294.62,291.38,300.79,296.11,293.05,299.15,314.87,309,304.67,301.08,300.54,294.21,295.31,307.07,299.99,306.71,313.85,311.76,310.81,325.1,328.7,332.4,335.69,337.18,341.82,344.51,348.58,349.79,348.87,357.91,362.56,364.02,362,378.31,385.17,382.36,382.88,382.33,379.78,379.2,380.21,383.87,386.25,388.86,382.36,383.71,386.15,383.81,380.58,371.54,362.91,359.92,358.08,359.14,363.18,368.69,360.38,349.83,346.35,344.61,344.49,350.16,345.58,345.51,341.97,340.87,343.43,343.38,346.22,347.7,343.76,348.08,353,357.36,364.48,369.94,374,349.92,349.09,350.75,341.84,349.14,348.33,349.63,354.97,353.7,357.46,365.81,365.71,369.47,369.95,370.8,374.4,375.1,367.99,371.28,374.02,371.78,374.34,370.2,368.5,361.12,360.89,363.54,363.85],[2215400,1578100,1496600,1755600,1445600,1563200,2242100,1953300,1489400,2946800,1652700,1569900,1796700,2239900,2918500,2308800,2007400,2289700,1930800,1970800,1938800,2399500,1992800,1367400,1790100,1309600,2392800,1763800,2724900,2397600,3118600,6428600,2363800,2382300,3545700,2232600,1837700,2176700,1998800,1677100,2224000,2316600,3221200,2515600,3172700,2526900,3501300,3047200,3790400,3409100,2609100,3192400,2303700,2297600,2384500,1877500,2019400,1865400,1129300,2232200,1746900,2964100,1706300,1932300,2329600,3081900,2128200,1967800,1588800,1750400,3062600,2519700,3163700,5008800,1646700,1623000,1923100,1528900,1062000,1035000,1117200,1273600,1031400,1589700,1881000,1397800,3097300,1989000,1610100,2127000,2103100,3307200,14448300,5585200,3100400,11243700,4915700,2372000,1985200,1919200,2427400,3184500,2311500,2889400,2619600,2242500,1816200,2205500,1893200,2052500,1932900,1570600,2155500,1687600,1947800,1857000,2403000,2203800,1931400,2428600],[329.32,324.36,328.41,333.19,337.88,340.35,326.25,325.13,329.46,324.08,326.52,321.15,318.62,310.88,300,292.7,289.48,298.83,294.18,291.14,297.2,312.82,306.99,302.68,299.12,298.58,292.29,293.39,305.07,298.04,304.71,311.81,309.73,308.78,322.98,326.56,330.23,333.5,334.98,339.59,342.27,346.31,347.51,346.6,355.58,360.2,361.65,359.64,375.85,382.66,379.87,380.39,379.84,377.31,376.73,377.73,381.37,383.73,386.33,379.87,381.21,386.15,383.81,380.58,371.54,362.91,359.92,358.08,359.14,363.18,368.69,360.38,349.83,346.35,344.61,344.49,350.16,345.58,345.51,341.97,340.87,343.43,343.38,346.22,347.7,343.76,348.08,353,357.36,364.48,369.94,374,349.92,349.09,350.75,341.84,349.14,348.33,349.63,354.97,353.7,357.46,365.81,365.71,369.47,369.95,370.8,374.4,375.1,367.99,371.28,374.02,371.78,374.34,370.2,368.5,361.12,360.89,363.54,363.85]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>symbol<\\/th>\\n      <th>date<\\/th>\\n      <th>open<\\/th>\\n      <th>high<\\/th>\\n      <th>low<\\/th>\\n      <th>close<\\/th>\\n      <th>volume<\\/th>\\n      <th>adjusted<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6,7,8]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## The Plot\n\nThere are a few charts specifically designed for OHLC data that are included in `plotly`.  Here I want to deploy a basic one with one modification.  I want daily increases in black and daily decreases in red.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\n# basic example of ohlc charts\n# custom colors\ni <- list(line = list(color = '#000000')) # black\nd <- list(line = list(color = '#FF0000')) # red\n# Create the figure\nfig.2 <- dat.tail %>%\n  plot_ly(x = ~date, type=\"ohlc\",\n          open = ~open, close = ~close,\n          high = ~high, low = ~low,\n          increasing = i, decreasing = d)\nfig.2\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-51a5c38234157adec582\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-51a5c38234157adec582\">{\"x\":{\"visdat\":{\"1571c216b0ac3\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"1571c216b0ac3\",\"attrs\":{\"1571c216b0ac3\":{\"x\":{},\"open\":{},\"close\":{},\"high\":{},\"low\":{},\"increasing\":{\"line\":{\"color\":\"#000000\"}},\"decreasing\":{\"line\":{\"color\":\"#FF0000\"}},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"ohlc\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"date\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[\"2022-09-02\",\"2022-09-06\",\"2022-09-07\",\"2022-09-08\",\"2022-09-09\",\"2022-09-12\",\"2022-09-13\",\"2022-09-14\",\"2022-09-15\",\"2022-09-16\",\"2022-09-19\",\"2022-09-20\",\"2022-09-21\",\"2022-09-22\",\"2022-09-23\",\"2022-09-26\",\"2022-09-27\",\"2022-09-28\",\"2022-09-29\",\"2022-09-30\",\"2022-10-03\",\"2022-10-04\",\"2022-10-05\",\"2022-10-06\",\"2022-10-07\",\"2022-10-10\",\"2022-10-11\",\"2022-10-12\",\"2022-10-13\",\"2022-10-14\",\"2022-10-17\",\"2022-10-18\",\"2022-10-19\",\"2022-10-20\",\"2022-10-21\",\"2022-10-24\",\"2022-10-25\",\"2022-10-26\",\"2022-10-27\",\"2022-10-28\",\"2022-10-31\",\"2022-11-01\",\"2022-11-02\",\"2022-11-03\",\"2022-11-04\",\"2022-11-07\",\"2022-11-08\",\"2022-11-09\",\"2022-11-10\",\"2022-11-11\",\"2022-11-14\",\"2022-11-15\",\"2022-11-16\",\"2022-11-17\",\"2022-11-18\",\"2022-11-21\",\"2022-11-22\",\"2022-11-23\",\"2022-11-25\",\"2022-11-28\",\"2022-11-29\",\"2022-11-30\",\"2022-12-01\",\"2022-12-02\",\"2022-12-05\",\"2022-12-06\",\"2022-12-07\",\"2022-12-08\",\"2022-12-09\",\"2022-12-12\",\"2022-12-13\",\"2022-12-14\",\"2022-12-15\",\"2022-12-16\",\"2022-12-19\",\"2022-12-20\",\"2022-12-21\",\"2022-12-22\",\"2022-12-23\",\"2022-12-27\",\"2022-12-28\",\"2022-12-29\",\"2022-12-30\",\"2023-01-03\",\"2023-01-04\",\"2023-01-05\",\"2023-01-06\",\"2023-01-09\",\"2023-01-10\",\"2023-01-11\",\"2023-01-12\",\"2023-01-13\",\"2023-01-17\",\"2023-01-18\",\"2023-01-19\",\"2023-01-20\",\"2023-01-23\",\"2023-01-24\",\"2023-01-25\",\"2023-01-26\",\"2023-01-27\",\"2023-01-30\",\"2023-01-31\",\"2023-02-01\",\"2023-02-02\",\"2023-02-03\",\"2023-02-06\",\"2023-02-07\",\"2023-02-08\",\"2023-02-09\",\"2023-02-10\",\"2023-02-13\",\"2023-02-14\",\"2023-02-15\",\"2023-02-16\",\"2023-02-17\",\"2023-02-21\",\"2023-02-22\",\"2023-02-23\",\"2023-02-24\"],\"open\":[334.68,332.32,324.25,330.29,337.98,341.66,336.08,328.45,328.73,326.38,320.57,325.7,324.92,322.32,307.55,299,297.5,294,297.07,296,297.17,306.8,306.58,307.39,304,303.63,298.01,293.99,290.42,307.46,304.41,321.67,312.61,312.1,311,328.5,327.86,334.52,339.31,338.52,341.07,345.13,347.62,347.5,354,360.01,362.3,362.95,370,380,384,385.98,383.21,377.15,381.28,378.9,381.4,383.9,385.76,385.43,381.13,382.5,386.5,381.52,378.55,369.48,362.49,362.03,356.71,358.57,374.63,367.01,354.48,345.08,346.27,345.99,348.26,347.16,344.84,346.51,340.5,342.44,341.74,345.5,348.03,344.25,347.3,351.88,352.64,358.87,366.24,363.49,364.8,348.32,346.03,349.87,341.67,340,344.75,351.73,351.95,353.29,359.16,359.1,368,365.62,369,368.17,372.92,377.04,367,369.09,373.94,368.74,370.75,368.05,366.72,361.63,363.2,360.17],\"close\":[331.48,326.49,330.56,335.38,340.1,342.58,328.39,327.26,331.62,326.21,328.66,323.26,320.71,312.92,301.97,294.62,291.38,300.79,296.11,293.05,299.15,314.87,309,304.67,301.08,300.54,294.21,295.31,307.07,299.99,306.71,313.85,311.76,310.81,325.1,328.7,332.4,335.69,337.18,341.82,344.51,348.58,349.79,348.87,357.91,362.56,364.02,362,378.31,385.17,382.36,382.88,382.33,379.78,379.2,380.21,383.87,386.25,388.86,382.36,383.71,386.15,383.81,380.58,371.54,362.91,359.92,358.08,359.14,363.18,368.69,360.38,349.83,346.35,344.61,344.49,350.16,345.58,345.51,341.97,340.87,343.43,343.38,346.22,347.7,343.76,348.08,353,357.36,364.48,369.94,374,349.92,349.09,350.75,341.84,349.14,348.33,349.63,354.97,353.7,357.46,365.81,365.71,369.47,369.95,370.8,374.4,375.1,367.99,371.28,374.02,371.78,374.34,370.2,368.5,361.12,360.89,363.54,363.85],\"high\":[340.32,333.25,332.16,335.81,341.03,344.37,336.52,330.93,335.28,329,329.29,326.8,329.79,323.39,309.79,302.1,299.15,302.41,299.35,301.09,301.23,315.16,310.21,309.08,305.15,304.72,302.52,299.78,308.76,311.62,311.62,324.48,314.79,316.05,325.77,331.24,333.6,338.67,341.93,342.58,346.18,348.69,357.44,350.67,358.38,362.96,367.19,367.15,380.43,387,387.3,389.58,385.4,381.72,382.83,380.77,385.83,388.2,389.44,388.39,384.93,386.15,386.5,382.52,378.87,370.37,365.3,362.59,361.64,364.01,378.56,368.83,356.11,347.78,348.4,347.42,350.88,348.05,347.76,347.75,342.85,344.64,343.69,348.6,350.31,345.14,349,356.5,357.5,365.5,370.1,374.35,366.79,354.79,352.16,352.25,349.56,350.3,349.96,355,355.99,362.33,365.92,368.94,372.89,374.57,371.26,376.31,378.35,379.68,372.23,375.06,377.05,374.37,374.25,371.06,366.72,363,367.88,365.18],\"low\":[329.97,323.46,323.25,327.36,337.03,340.09,326.83,323.5,327.59,319.79,320.54,320.01,320.63,311.2,297.46,292.31,288.62,292.46,291.55,292.7,291.1,305.88,303.6,303.42,299.15,298.43,293.92,291.71,287.75,299.07,304.14,312,308.06,309,309.49,325.85,325.92,334.14,336.53,336,340.57,343.77,346.74,342.59,351.23,358.52,361.46,360.88,369.74,378.75,380.5,380.65,380.01,375.01,377.39,375.42,381.4,383.41,385.18,380.89,379.26,375.1,380.45,378.4,369.31,360.33,358.15,356.06,356.21,356.34,365.51,359.45,347.94,343.41,342.63,343.49,346.89,339.88,343.11,341.79,339.3,341.24,339.4,342.81,345.08,340.14,340.95,349.5,350.5,356.21,362.57,362.36,344,347.8,345.52,338.21,336.16,340,343.9,349.52,351.83,352.4,356.86,358.76,364.55,365.44,365.78,367.34,371.98,367.8,364.56,368,369.38,368.25,368.8,366.86,360.09,358.04,359.61,359.53],\"increasing\":{\"line\":{\"color\":\"#000000\"}},\"decreasing\":{\"line\":{\"color\":\"#FF0000\"}},\"type\":\"ohlc\",\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nAfter I have the model report written, I can save the file and stop.  The key is to note the file name and the full path.  I will store mine in whatever my current working directory is.  I want two more libraries; I need the `rmarkdown` library to *render* the file and I need the `purrr` library to *map* my tickers into render.  I created a little function for this called `Equity.Analyser` to simplify my use of map.  `tidyquant` has a function for acquiring all of the basic data on members of an index or exchange.  I want to choose the S and P 400 and then generate a report for each one.  The one trick is that I need a simple vector to pass to map so I unlist the column.  This produced nearly 370 little reports in about 10 minutes.\n\n```\nlibrary(quarto)\nlibrary(purrr)\nEquity.Analyser <- function(x) {\n  quarto_render(\"TQ-Parameters.qmd\", params = list(ticker = x), output_file = paste0(x,\"-TQ-Parameters.html\"))\n}\nSP400 <- tq_index(\"SP400\") \nSP400 %>% select(symbol) %>% unlist() %>% map(., Equity.Analyser)\n```\n\n\n# References\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::write_bib(names(sessionInfo()$otherPkgs), file=\"bibliography.bib\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.27/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.12.1/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.12.1/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.12.1/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.1/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}